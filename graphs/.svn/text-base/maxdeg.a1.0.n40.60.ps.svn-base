%!PS-Adobe-2.0
%%Title: maxdeg.a1.0.n40.60.ps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon Dec 13 16:15:20 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (maxdeg.a1.0.n40.60.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Dec 13 16:15:20 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 280 M
63 0 V
6213 0 R
-63 0 V
630 280 M
( 10) Rshow
1.000 UL
LTb
714 762 M
63 0 V
6213 0 R
-63 0 V
630 762 M
( 20) Rshow
1.000 UL
LTb
714 1244 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 30) Rshow
1.000 UL
LTb
714 1727 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 40) Rshow
1.000 UL
LTb
714 2209 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 50) Rshow
1.000 UL
LTb
714 2691 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 60) Rshow
1.000 UL
LTb
714 3173 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 70) Rshow
1.000 UL
LTb
714 3656 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 80) Rshow
1.000 UL
LTb
714 4138 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 90) Rshow
1.000 UL
LTb
714 4620 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 100) Rshow
1.000 UL
LTb
714 280 M
0 63 V
0 4277 R
0 -63 V
714 140 M
( 0) Cshow
1.000 UL
LTb
1760 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 5) Cshow
1.000 UL
LTb
2806 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 10) Cshow
1.000 UL
LTb
3852 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 15) Cshow
1.000 UL
LTb
4898 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 20) Cshow
1.000 UL
LTb
5944 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 25) Cshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4277 R
0 -63 V
0 -4417 R
( 30) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 4620 N
714 280 L
6276 0 V
0 4340 V
-6276 0 V
Z stroke
3852 4830 M
(Maximum Average Degree, alpha=1.0) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1218 4487 M
(n=40) Rshow
LT0
1302 4487 M
399 0 V
923 630 M
209 174 V
210 27 V
209 8 V
209 14 V
209 9 V
209 14 V
210 10 V
209 22 V
209 8 V
209 16 V
209 8 V
210 8 V
209 10 V
209 8 V
209 13 V
209 6 V
210 6 V
209 5 V
209 9 V
209 6 V
209 8 V
210 6 V
209 5 V
209 4 V
209 6 V
209 5 V
210 6 V
209 3 V
209 3 V
923 630 Pls
1132 804 Pls
1342 831 Pls
1551 839 Pls
1760 853 Pls
1969 862 Pls
2178 876 Pls
2388 886 Pls
2597 908 Pls
2806 916 Pls
3015 932 Pls
3224 940 Pls
3434 948 Pls
3643 958 Pls
3852 966 Pls
4061 979 Pls
4270 985 Pls
4480 991 Pls
4689 996 Pls
4898 1005 Pls
5107 1011 Pls
5316 1019 Pls
5526 1025 Pls
5735 1030 Pls
5944 1034 Pls
6153 1040 Pls
6362 1045 Pls
6572 1051 Pls
6781 1054 Pls
6990 1057 Pls
1501 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
1218 4347 M
(n=60) Rshow
LT1
1302 4347 M
399 0 V
923 1015 M
209 205 V
210 36 V
209 9 V
209 9 V
209 19 V
209 15 V
210 18 V
209 19 V
209 18 V
209 17 V
209 18 V
210 12 V
209 16 V
209 17 V
209 17 V
209 10 V
210 10 V
209 10 V
209 12 V
209 10 V
209 9 V
210 11 V
209 11 V
209 3 V
209 15 V
209 4 V
210 8 V
209 6 V
209 10 V
923 1015 Crs
1132 1220 Crs
1342 1256 Crs
1551 1265 Crs
1760 1274 Crs
1969 1293 Crs
2178 1308 Crs
2388 1326 Crs
2597 1345 Crs
2806 1363 Crs
3015 1380 Crs
3224 1398 Crs
3434 1410 Crs
3643 1426 Crs
3852 1443 Crs
4061 1460 Crs
4270 1470 Crs
4480 1480 Crs
4689 1490 Crs
4898 1502 Crs
5107 1512 Crs
5316 1521 Crs
5526 1532 Crs
5735 1543 Crs
5944 1546 Crs
6153 1561 Crs
6362 1565 Crs
6572 1573 Crs
6781 1579 Crs
6990 1589 Crs
1501 4347 Crs
1.000 UP
1.000 UL
LT2
LTb
1218 4207 M
(n=80) Rshow
LT2
1302 4207 M
399 0 V
923 1325 M
209 309 V
210 14 V
209 32 V
209 9 V
209 12 V
209 24 V
210 20 V
209 23 V
209 19 V
209 24 V
209 20 V
210 20 V
209 20 V
209 12 V
209 24 V
209 11 V
210 22 V
209 11 V
209 17 V
209 12 V
209 16 V
210 11 V
209 16 V
209 5 V
209 15 V
209 12 V
210 6 V
209 13 V
209 7 V
923 1325 Star
1132 1634 Star
1342 1648 Star
1551 1680 Star
1760 1689 Star
1969 1701 Star
2178 1725 Star
2388 1745 Star
2597 1768 Star
2806 1787 Star
3015 1811 Star
3224 1831 Star
3434 1851 Star
3643 1871 Star
3852 1883 Star
4061 1907 Star
4270 1918 Star
4480 1940 Star
4689 1951 Star
4898 1968 Star
5107 1980 Star
5316 1996 Star
5526 2007 Star
5735 2023 Star
5944 2028 Star
6153 2043 Star
6362 2055 Star
6572 2061 Star
6781 2074 Star
6990 2081 Star
1501 4207 Star
1.000 UP
1.000 UL
LT3
LTb
1218 4067 M
(n=100) Rshow
LT3
1302 4067 M
399 0 V
923 1667 M
209 368 V
210 18 V
209 14 V
209 6 V
209 28 V
209 14 V
210 24 V
209 30 V
209 25 V
209 28 V
209 23 V
210 26 V
209 16 V
209 23 V
209 24 V
209 21 V
210 21 V
209 21 V
209 17 V
209 18 V
209 14 V
210 20 V
209 12 V
209 12 V
209 11 V
209 15 V
210 12 V
209 12 V
209 15 V
923 1667 Box
1132 2035 Box
1342 2053 Box
1551 2067 Box
1760 2073 Box
1969 2101 Box
2178 2115 Box
2388 2139 Box
2597 2169 Box
2806 2194 Box
3015 2222 Box
3224 2245 Box
3434 2271 Box
3643 2287 Box
3852 2310 Box
4061 2334 Box
4270 2355 Box
4480 2376 Box
4689 2397 Box
4898 2414 Box
5107 2432 Box
5316 2446 Box
5526 2466 Box
5735 2478 Box
5944 2490 Box
6153 2501 Box
6362 2516 Box
6572 2528 Box
6781 2540 Box
6990 2555 Box
1501 4067 Box
1.000 UP
1.000 UL
LT4
LTb
1218 3927 M
(n=120) Rshow
LT4
1302 3927 M
399 0 V
923 1926 M
209 475 V
210 43 V
209 10 V
209 3 V
209 17 V
209 34 V
210 23 V
209 31 V
209 29 V
209 27 V
209 36 V
210 16 V
209 30 V
209 25 V
209 30 V
209 17 V
210 26 V
209 24 V
209 20 V
209 20 V
209 20 V
210 13 V
209 23 V
209 13 V
209 24 V
209 12 V
210 15 V
209 17 V
209 9 V
923 1926 BoxF
1132 2401 BoxF
1342 2444 BoxF
1551 2454 BoxF
1760 2457 BoxF
1969 2474 BoxF
2178 2508 BoxF
2388 2531 BoxF
2597 2562 BoxF
2806 2591 BoxF
3015 2618 BoxF
3224 2654 BoxF
3434 2670 BoxF
3643 2700 BoxF
3852 2725 BoxF
4061 2755 BoxF
4270 2772 BoxF
4480 2798 BoxF
4689 2822 BoxF
4898 2842 BoxF
5107 2862 BoxF
5316 2882 BoxF
5526 2895 BoxF
5735 2918 BoxF
5944 2931 BoxF
6153 2955 BoxF
6362 2967 BoxF
6572 2982 BoxF
6781 2999 BoxF
6990 3008 BoxF
1501 3927 BoxF
1.000 UP
1.000 UL
LT5
LTb
1218 3787 M
(n=140) Rshow
LT5
1302 3787 M
399 0 V
923 2324 M
209 456 V
210 50 V
209 -10 V
209 3 V
209 35 V
209 15 V
210 39 V
209 38 V
209 21 V
209 32 V
209 32 V
210 33 V
209 28 V
209 29 V
209 27 V
209 29 V
210 32 V
209 15 V
209 22 V
209 37 V
209 10 V
210 34 V
209 19 V
209 16 V
209 16 V
209 30 V
210 8 V
209 20 V
209 12 V
923 2324 Circle
1132 2780 Circle
1342 2830 Circle
1551 2820 Circle
1760 2823 Circle
1969 2858 Circle
2178 2873 Circle
2388 2912 Circle
2597 2950 Circle
2806 2971 Circle
3015 3003 Circle
3224 3035 Circle
3434 3068 Circle
3643 3096 Circle
3852 3125 Circle
4061 3152 Circle
4270 3181 Circle
4480 3213 Circle
4689 3228 Circle
4898 3250 Circle
5107 3287 Circle
5316 3297 Circle
5526 3331 Circle
5735 3350 Circle
5944 3366 Circle
6153 3382 Circle
6362 3412 Circle
6572 3420 Circle
6781 3440 Circle
6990 3452 Circle
1501 3787 Circle
1.000 UP
1.000 UL
LT6
LTb
1218 3647 M
(n=160) Rshow
LT6
1302 3647 M
399 0 V
923 2546 M
209 616 V
210 38 V
209 -9 V
209 3 V
209 16 V
209 42 V
210 27 V
209 25 V
209 36 V
209 45 V
209 39 V
210 34 V
209 27 V
209 36 V
209 31 V
209 29 V
210 29 V
209 28 V
209 24 V
209 25 V
209 29 V
210 18 V
209 22 V
209 19 V
209 30 V
209 23 V
210 18 V
209 21 V
209 15 V
923 2546 CircleF
1132 3162 CircleF
1342 3200 CircleF
1551 3191 CircleF
1760 3194 CircleF
1969 3210 CircleF
2178 3252 CircleF
2388 3279 CircleF
2597 3304 CircleF
2806 3340 CircleF
3015 3385 CircleF
3224 3424 CircleF
3434 3458 CircleF
3643 3485 CircleF
3852 3521 CircleF
4061 3552 CircleF
4270 3581 CircleF
4480 3610 CircleF
4689 3638 CircleF
4898 3662 CircleF
5107 3687 CircleF
5316 3716 CircleF
5526 3734 CircleF
5735 3756 CircleF
5944 3775 CircleF
6153 3805 CircleF
6362 3828 CircleF
6572 3846 CircleF
6781 3867 CircleF
6990 3882 CircleF
1501 3647 CircleF
1.000 UL
LTb
714 4620 N
714 280 L
6276 0 V
0 4340 V
-6276 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
